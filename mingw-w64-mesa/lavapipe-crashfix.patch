diff --git a/src/gallium/auxiliary/gallivm/lp_bld_tgsi_soa.c b/src/gallium/auxiliary/gallivm/lp_bld_tgsi_soa.c
index a9c04970cad115df23166999f43429d434752dc7..31aacef74d65599855e39528b525e70749ee8f55 100644
--- a/src/gallium/auxiliary/gallivm/lp_bld_tgsi_soa.c
+++ b/src/gallium/auxiliary/gallivm/lp_bld_tgsi_soa.c
@@ -305,7 +305,7 @@ static void lp_exec_default(struct lp_exec_mask *mask,
    LLVMBuilderRef builder = mask->bld->gallivm->builder;
    struct function_ctx *ctx = func_ctx(mask);
 
-   int default_exec_pc;
+   int default_exec_pc = 0;
    boolean default_is_last;
 
    if (ctx->switch_stack_size > LP_MAX_TGSI_NESTING) {
diff --git a/src/gallium/frontends/lavapipe/lvp_image.c b/src/gallium/frontends/lavapipe/lvp_image.c
index e889a1754af5eabdaf3badc91eb89d3ff905868d..6ea29c950fa9e09b47fb8349bc1b94a7c07ac1c6 100644
--- a/src/gallium/frontends/lavapipe/lvp_image.c
+++ b/src/gallium/frontends/lavapipe/lvp_image.c
@@ -124,7 +124,7 @@ lvp_image_from_swapchain(VkDevice device,
                          const VkAllocationCallbacks *pAllocator,
                          VkImage *pImage)
 {
-   struct lvp_image *swapchain_image = lvp_swapchain_get_image(swapchain_info->swapchain, 0);
+   ASSERTED struct lvp_image *swapchain_image = lvp_swapchain_get_image(swapchain_info->swapchain, 0);
    assert(swapchain_image);
 
    assert(swapchain_image->type == pCreateInfo->imageType);
diff --git a/src/vulkan/meson.build b/src/vulkan/meson.build
index 3a6806cb5e10e7b2d616d65ab7f056daf5b76473..3f95551f296b847ff4539348b252312b560b6100 100644
--- a/src/vulkan/meson.build
+++ b/src/vulkan/meson.build
@@ -59,9 +59,6 @@ if with_xlib_lease
   vulkan_wsi_deps += [dep_xlib_xrandr]
   vulkan_wsi_list += ['xlib_xrandr']
 endif
-if with_platform_windows
-  vulkan_wsi_args += ['-DVK_USE_PLATFORM_WIN32_KHR']
-endif
 
 
 subdir('util')
diff --git a/src/vulkan/util/meson.build b/src/vulkan/util/meson.build
index c5526a2f52f6ee98108d3040344e1e579d0b80d5..1a3723990bc02e97c8ade54b3e9487b0b15d450b 100644
--- a/src/vulkan/util/meson.build
+++ b/src/vulkan/util/meson.build
@@ -125,7 +125,10 @@ idep_vulkan_util_headers = declare_dependency(
   include_directories : include_directories('.')
 )
 
-if with_platform_windows
+# This is likely a bug in the Meson VS backend, as MSVC with ninja works fine.
+# See this discussion here:
+# https://gitlab.freedesktop.org/mesa/mesa/-/merge_requests/10506 
+if get_option('backend').startswith('vs')
   idep_vulkan_util = declare_dependency(
     link_with : libvulkan_util,
     dependencies : idep_vulkan_util_headers
