# Maintainer: Sarah Ottinger

_realname=pytest-localserver
pkgbase=mingw-w64-python-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-python-${_realname}")
provides=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
conflicts=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
replaces=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
pkgver=0.5.0
pkgrel=1
pkgdesc='py.test plugin to test server connections locally (mingw-w64)'
arch=('any')
url="https://bitbucket.org/pytest-dev/pytest-localserver"
license=('MIT')
depends=("${MINGW_PACKAGE_PREFIX}-python-pytest" "${MINGW_PACKAGE_PREFIX}-python-werkzeug")
makedepends=("${MINGW_PACKAGE_PREFIX}-python-setuptools")
checkdepends=("${MINGW_PACKAGE_PREFIX}-python-requests")
source=("${_realname}-$pkgver.tar.gz::https://bitbucket.org/pytest-dev/pytest-localserver/get/$pkgver.tar.bz2")
sha512sums=('78993ee0245c9eace723c21eee6de359089f1e1895eac9c531268353b3a3d2045006d29656ea99733ad380f33af2b88f7332e83dcd4c7a97ced611cdbce5a673')

prepare() {  
  cd "$srcdir"
  mv pytest-dev-pytest-localserver-* pytest-localserver-$pkgver | true
  rm -rf python-build-${CARCH} | true
  cp -r "${_realname}-$pkgver" "python-build-${CARCH}"
}

build() {
  msg "Python build for ${CARCH}"  
  cd "${srcdir}/python-build-${CARCH}"
  ${MINGW_PREFIX}/bin/python setup.py build
}

# check() {
#   cd "${srcdir}/python-build-${CARCH}"
#   MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
#   ${MINGW_PREFIX}/bin/python setup.py install --prefix=${MINGW_PREFIX} \
#     --root="$PWD/tmp_install" --optimize=1 --skip-build
#   PYTHONPATH="$PWD/tmp_install/${MINGW_PREFIX}/lib/python3.8/site-packages:$PYTHONPATH" ${MINGW_PREFIX}/bin/py.test
# }

package() {
  cd "${srcdir}/python-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build
  install -Dm644 LICENSE "${pkgdir}${MINGW_PREFIX}/share/licenses/python-${_realname}/LICENSE"
}
