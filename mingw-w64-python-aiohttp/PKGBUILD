# Maintainer: Sarah Ottinger <schalaalexiazeal@gmail.com>

_realname=aiohttp
pkgbase=mingw-w64-python-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-python-${_realname}")
provides=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
conflicts=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
replaces=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
pkgver=3.6.2
_gitcommit=6a5ab96bd9cb404b4abfd5160fe8f34a29d941e5
pkgrel=1
pkgdesc='HTTP client/server for asyncio (mingw-w64)'
arch=('any')
url="https://aiohttp.readthedocs.io/"
license=('Apache')
depends=("${MINGW_PACKAGE_PREFIX}-python-async-timeout" "${MINGW_PACKAGE_PREFIX}-python-attrs" "${MINGW_PACKAGE_PREFIX}-python-chardet" "${MINGW_PACKAGE_PREFIX}-python-yarl")
makedepends=("${MINGW_PACKAGE_PREFIX}-python-setuptools" "${MINGW_PACKAGE_PREFIX}-cython" "git")
checkdepends=("${MINGW_PACKAGE_PREFIX}-python-freezegun" "${MINGW_PACKAGE_PREFIX}-python-pytest-runner" "${MINGW_PACKAGE_PREFIX}-python-pytest-cov" "${MINGW_PACKAGE_PREFIX}-python-pytest-forked" "${MINGW_PACKAGE_PREFIX}-python-pytest-mock" "${MINGW_PACKAGE_PREFIX}-python-pytest-timeout" "${MINGW_PACKAGE_PREFIX}-python-pytest-xdist")
source=(${_realname}::"git+https://github.com/aio-libs/aiohttp#commit=${_gitcommit}"
        "git+https://github.com/nodejs/http-parser")
sha512sums=('SKIP'
            'SKIP')

pkgver() {
  cd ${_realname}
  git describe --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare() {  
  cd "$srcdir"
  rm -rf python-build-${CARCH} | true
  cp -r "${_realname}" "python-build-${CARCH}"
  cd "${srcdir}/python-build-${CARCH}"
  git submodule init
  git config submodule."vendor/http-parser".url "${srcdir}/http-parser"
  git submodule update --recursive
  sed 's|.install-cython ||' -i Makefile
}

build() {
  msg "Python build for ${CARCH}"
  cd "${srcdir}/python-build-${CARCH}"
  make cythonize
  ${MINGW_PREFIX}/bin/python setup.py build
}

check() {
  cd "${srcdir}/python-build-${CARCH}"
  ${MINGW_PREFIX}/bin/python setup.py test || warning "Tests failed"
}

package() {
  cd "${srcdir}/python-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build
  install -Dm644 LICENSE.txt "${pkgdir}${MINGW_PREFIX}/share/licenses/python-${_realname}/LICENSE.txt"
}
