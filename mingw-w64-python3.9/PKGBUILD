# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Maintainer: Ray Donnelly <mingw.android@gmail.com>
# Contributor: Saul Ibarra Corretge <saghul@gmail.com>
# Contributor: Frode Solheim <frode@fs-uae.net>

# TODO :: subprocess.Popen .. specifically list2cmdline in subprocess.py
#         needs a fix so it can handle running MSYS2 executables better.
#         Arguments should not be quoted in the Windows fashion as-per:
#         http://www.daviddeley.com/autohotkey/parameters/parameters.htm
#         but instead how Cygwin expects them to be quoted. Checking for
#         {cygwin,msys-2.0}.dll in the executable is the only way that I
#         can think to do this at present.
#         Any double quoted string will cause problems, e.g.
#         -DGNOMELOCALEDIR=\"/mingw64/share/locale\"

_primary_python="no"
_pybasever=3.9
_realname=python

if [[ "${_primary_python}" == "yes" ]]; then
  pkgbase="mingw-w64-${_realname}"
  pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
  provides=("${MINGW_PACKAGE_PREFIX}-python3=${pkgver}")
  conflicts=("${MINGW_PACKAGE_PREFIX}-python3"
            "${MINGW_PACKAGE_PREFIX}-python2<2.7.16-7")
  replaces=("${MINGW_PACKAGE_PREFIX}-python3")
else
  pkgbase="mingw-w64-${_realname}${_pybasever}"
  pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}${_pybasever}")
fi
pkgver=${_pybasever}.5
pkgrel=5
pkgdesc="A high-level scripting language (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32')
license=('PSF')
url="https://www.python.org/"
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-expat"
         "${MINGW_PACKAGE_PREFIX}-bzip2"
         "${MINGW_PACKAGE_PREFIX}-libffi"
         "${MINGW_PACKAGE_PREFIX}-mpdecimal"
         "${MINGW_PACKAGE_PREFIX}-ncurses"
         "${MINGW_PACKAGE_PREFIX}-openssl"
         "${MINGW_PACKAGE_PREFIX}-sqlite3"
         "${MINGW_PACKAGE_PREFIX}-tcl"
         "${MINGW_PACKAGE_PREFIX}-tk"
         "${MINGW_PACKAGE_PREFIX}-zlib"
         "${MINGW_PACKAGE_PREFIX}-xz")
makedepends=(
  "${MINGW_PACKAGE_PREFIX}-gcc"
  "${MINGW_PACKAGE_PREFIX}-pkg-config"
  "autoconf-archive"
)
options=('makeflags') # 'debug' '!strip')
source=("https://www.python.org/ftp/python/${pkgver%rc?}/Python-${pkgver}.tar.xz"
        "smoketests.py"
        0001-make-_sysconfigdata.py-relocatable.patch
        0002-restore-setup-config.patch
        0003-MINGW-BASE-use-NT-thread-model.patch
        0004-MINGW-translate-gcc-internal-defines-to-python-platf.patch
        0005-MINGW-configure-MACHDEP-and-platform-for-build.patch
        0006-MINGW-preset-configure-defaults.patch
        0007-MINGW-configure-largefile-support-for-windows-builds.patch
        0008-MINGW-add-srcdir-PC-to-CPPFLAGS.patch
        0009-MINGW-init-system-calls.patch
        0010-MINGW-build-in-windows-modules-winreg.patch
        0011-MINGW-determine-if-pwdmodule-should-be-used.patch
        0012-MINGW-compiler-customize-mingw-cygwin-compilers.patch
        0013-MINGW-compiler-enable-new-dtags.patch
        0014-issue6672-v2-Add-Mingw-recognition-to-pyport.h-to-al.patch
        0015-MINGW-configure-for-shared-build.patch
        0016-MINGW-dynamic-loading-support.patch
        0017-MINGW-ignore-main-program-for-frozen-scripts.patch
        0018-MINGW-setup-_multiprocessing-module.patch
        0019-MINGW-setup-select-module.patch
        0020-MINGW-setup-_ctypes-module-with-system-libffi.patch
        0021-MINGW-defect-winsock2-and-setup-_socket-module.patch
        0022-MINGW-exclude-unix-only-modules.patch
        0023-MINGW-setup-msvcrt-and-_winapi-modules.patch
        0024-MINGW-build-extensions-with-GCC.patch
        0025-MINGW-use-Mingw32CCompiler-as-default-compiler-for-m.patch
        0026-MINGW-find-import-library.patch
        0027-MINGW-setup-_ssl-module.patch
        0028-MINGW-generalization-of-posix-build-in-sysconfig.py.patch
        0029-MINGW-support-stdcall-without-underscore.patch
        0030-use-replace-instead-rename-to-avoid-failure-on-windo.patch
        0031-MINGW-avoid-circular-dependency-from-time-module-dur.patch
        0032-MINGW-generalization-of-posix-build-in-distutils-sys.patch
        0033-MINGW-customize-site.patch
        0034-add-python-config-sh.patch
        0035-cross-darwin-feature.patch
        0036-py3k-mingw-ntthreads-vs-pthreads.patch
        0037-mingw-system-libffi.patch
        0038-msys-mingw-prefer-unix-sep-if-MSYSTEM.patch
        0039-mingw-use-posix-getpath.patch
        0040-mingw-add-ModuleFileName-dir-to-PATH.patch
        0041-mingw-add-BUILDIN_WIN32_MODULEs-time-msvcrt.patch
        0042-msys-cygwin-semi-native-build-sysconfig.patch
        0043-mingw-sysconfig-like-posix.patch
        0044-mingw-_winapi_as_builtin_for_Popen_in_cygwinccompile.patch
        0045-cross-dont-add-multiarch-paths-if-cross-compiling.patch
        0046-mingw-use-backslashes-in-compileall-py.patch
        0047-msys-convert_path-fix-and-root-hack.patch
        0048-allow-static-tcltk.patch
        0049-mingw-pdcurses_ISPAD.patch
        0050-grammar-fixes.patch
        0051-builddir-fixes.patch
        0052-msys-monkeypatch-os-system-via-sh-exe.patch
        0053-msys-replace-slashes-used-in-io-redirection.patch
        0054-mingw-install-layout-as-posix.patch
        0055-remove_path_max.default.patch
        0056-dont-link-with-gettext.patch
        0057-ctypes-python-dll.patch
        0058-gdbm-module-includes.patch
        0059-use-gnu_printf-in-format.patch
        0060-mingw-fix-ssl-dont-use-enum_certificates.patch
        0061-mingw-build-optimized-ext.patch
        0062-cygwinccompiler-dont-strip-modules-if-pydebug.patch
        0063-fix-using-dllhandle-and-winver-mingw.patch
        0064-mingw-add-LIBPL-to-library-dirs.patch
        0065-Add-AMD64-to-sys-config-so-msvccompiler-get_build_ve.patch
        0066-MINGW-link-with-additional-library.patch
        0067-install-msilib.patch
        0068-dont-include-system-ncurses-path.patch
        0069-fix-signal-module-build.patch
        0070-build-winconsoleio.patch
        0071-expose-sem_unlink.patch
        0072-cygpty-isatty.patch
        0073-disable-broken-gdbm-module.patch
        0074-link-win-resource-files-and-build-pythonw.patch
        0075-3.7-mpdec-mingw.patch
        0076-disable-readline.patch
        0077-fix-isselectable.patch
        0078-use-_wcsnicmp-instead-wcsncasecmp.patch
        0079-_xxsubinterpretersmodule.patch
        0080-sqlite3-module-defines.patch
        0081-configure-have-inet-pton.patch
        0082-fix-msvc9-import.patch
        0083-set-venv-activate-path-unix.patch
        0084-venv-creation-fixes.patch
        0085-pass-gen-profile-ldflags.patch
        0086-distutils-add-windmc-to-cygwinccompiler.patch
        0087-pkg-config-windows-must-link-ext-with-python-lib.patch
        0088-importlib-bootstrap-path-sep.patch
        0089-pathlib-path-sep.patch
        0090-warnings-fixes.patch
        0091-fix-build-testinternalcapi.patch
        0092-extend-MS_WINDOWS-flag.patch
        0093-clang-arm64.patch
        0094-MINGW-stack-reserve.patch
        0095-Add-support-for-Windows-7-Python-3.9.patch)

# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying ${_patch}"
    patch -Nbp1 -i "${srcdir}/${_patch}"
  done
}

prepare() {
  cd "${srcdir}/Python-${pkgver}"

 apply_patch_with_msg 0001-make-_sysconfigdata.py-relocatable.patch \
  0002-restore-setup-config.patch \
  0003-MINGW-BASE-use-NT-thread-model.patch \
  0004-MINGW-translate-gcc-internal-defines-to-python-platf.patch \
  0005-MINGW-configure-MACHDEP-and-platform-for-build.patch \
  0006-MINGW-preset-configure-defaults.patch \
  0007-MINGW-configure-largefile-support-for-windows-builds.patch \
  0008-MINGW-add-srcdir-PC-to-CPPFLAGS.patch \
  0009-MINGW-init-system-calls.patch \
  0010-MINGW-build-in-windows-modules-winreg.patch \
  0011-MINGW-determine-if-pwdmodule-should-be-used.patch \
  0012-MINGW-compiler-customize-mingw-cygwin-compilers.patch \
  0013-MINGW-compiler-enable-new-dtags.patch \
  0014-issue6672-v2-Add-Mingw-recognition-to-pyport.h-to-al.patch \
  0015-MINGW-configure-for-shared-build.patch \
  0016-MINGW-dynamic-loading-support.patch \
  0017-MINGW-ignore-main-program-for-frozen-scripts.patch \
  0018-MINGW-setup-_multiprocessing-module.patch \
  0019-MINGW-setup-select-module.patch \
  0020-MINGW-setup-_ctypes-module-with-system-libffi.patch \
  0021-MINGW-defect-winsock2-and-setup-_socket-module.patch \
  0022-MINGW-exclude-unix-only-modules.patch \
  0023-MINGW-setup-msvcrt-and-_winapi-modules.patch \
  0024-MINGW-build-extensions-with-GCC.patch \
  0025-MINGW-use-Mingw32CCompiler-as-default-compiler-for-m.patch \
  0026-MINGW-find-import-library.patch \
  0027-MINGW-setup-_ssl-module.patch \
  0028-MINGW-generalization-of-posix-build-in-sysconfig.py.patch \
  0029-MINGW-support-stdcall-without-underscore.patch \
  0030-use-replace-instead-rename-to-avoid-failure-on-windo.patch \
  0031-MINGW-avoid-circular-dependency-from-time-module-dur.patch \
  0032-MINGW-generalization-of-posix-build-in-distutils-sys.patch \
  0033-MINGW-customize-site.patch \
  0034-add-python-config-sh.patch \
  0035-cross-darwin-feature.patch \
  0036-py3k-mingw-ntthreads-vs-pthreads.patch \
  0037-mingw-system-libffi.patch \
  0038-msys-mingw-prefer-unix-sep-if-MSYSTEM.patch \
  0039-mingw-use-posix-getpath.patch \
  0040-mingw-add-ModuleFileName-dir-to-PATH.patch \
  0041-mingw-add-BUILDIN_WIN32_MODULEs-time-msvcrt.patch \
  0042-msys-cygwin-semi-native-build-sysconfig.patch \
  0043-mingw-sysconfig-like-posix.patch \
  0044-mingw-_winapi_as_builtin_for_Popen_in_cygwinccompile.patch \
  0045-cross-dont-add-multiarch-paths-if-cross-compiling.patch \
  0046-mingw-use-backslashes-in-compileall-py.patch \
  0047-msys-convert_path-fix-and-root-hack.patch \
  0048-allow-static-tcltk.patch \
  0049-mingw-pdcurses_ISPAD.patch \
  0050-grammar-fixes.patch \
  0051-builddir-fixes.patch \
  0052-msys-monkeypatch-os-system-via-sh-exe.patch \
  0053-msys-replace-slashes-used-in-io-redirection.patch \
  0054-mingw-install-layout-as-posix.patch \
  0055-remove_path_max.default.patch \
  0056-dont-link-with-gettext.patch \
  0057-ctypes-python-dll.patch \
  0058-gdbm-module-includes.patch \
  0059-use-gnu_printf-in-format.patch \
  0060-mingw-fix-ssl-dont-use-enum_certificates.patch \
  0061-mingw-build-optimized-ext.patch \
  0062-cygwinccompiler-dont-strip-modules-if-pydebug.patch \
  0063-fix-using-dllhandle-and-winver-mingw.patch \
  0064-mingw-add-LIBPL-to-library-dirs.patch \
  0065-Add-AMD64-to-sys-config-so-msvccompiler-get_build_ve.patch \
  0066-MINGW-link-with-additional-library.patch \
  0067-install-msilib.patch \
  0068-dont-include-system-ncurses-path.patch \
  0069-fix-signal-module-build.patch \
  0070-build-winconsoleio.patch \
  0071-expose-sem_unlink.patch \
  0072-cygpty-isatty.patch \
  0073-disable-broken-gdbm-module.patch \
  0074-link-win-resource-files-and-build-pythonw.patch \
  0075-3.7-mpdec-mingw.patch \
  0076-disable-readline.patch \
  0077-fix-isselectable.patch \
  0078-use-_wcsnicmp-instead-wcsncasecmp.patch \
  0079-_xxsubinterpretersmodule.patch \
  0080-sqlite3-module-defines.patch \
  0081-configure-have-inet-pton.patch \
  0082-fix-msvc9-import.patch \
  0083-set-venv-activate-path-unix.patch \
  0084-venv-creation-fixes.patch \
  0085-pass-gen-profile-ldflags.patch \
  0086-distutils-add-windmc-to-cygwinccompiler.patch \
  0087-pkg-config-windows-must-link-ext-with-python-lib.patch \
  0088-importlib-bootstrap-path-sep.patch \
  0089-pathlib-path-sep.patch \
  0090-warnings-fixes.patch \
  0091-fix-build-testinternalcapi.patch \
  0092-extend-MS_WINDOWS-flag.patch \
  0093-clang-arm64.patch \
  0094-MINGW-stack-reserve.patch \
  0095-Add-support-for-Windows-7-Python-3.9.patch
 
  autoreconf -vfi
}

check() {
  cd "${srcdir}/build-${CARCH}"

  # Some basic tests to ensure nothing major or MSYS2 specific features are
  # broken
  ./python.exe "${srcdir}/smoketests.py"
  MSYSTEM= ./python.exe "${srcdir}/smoketests.py"

  # make test EXTRATESTOPTS="-v"
}

build() {
  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})

  CFLAGS+=" -fwrapv -D__USE_MINGW_ANSI_STDIO=1 -D_WIN32_WINNT=0x0601"
  CXXFLAGS+=" -fwrapv -D__USE_MINGW_ANSI_STDIO=1 -D_WIN32_WINNT=0x0601"
  CPPFLAGS+=" -I${PREFIX_WIN}/include/ncurses "

  declare -a _extra_config
  if check_option "debug" "n"; then
    CFLAGS+=" -DNDEBUG "
    CXXFLAGS+=" -DNDEBUG "
    _extra_config+=("--enable-optimizations")
    # _extra_config+=("--with-lto")
  else
    CFLAGS+=" -O0 -ggdb"
    CXXFLAGS+=" -O0 -ggdb"
    _extra_config+=("--with-pydebug")
  fi


  # Fix MS_DLL_ID undeclared in PC/dl_nt.c
  local f3f=0
  local re='^[0-9]+$'
  local part3=${pkgver##*.}
  if ! [[ $part3 =~ $re ]] ; then
    local c=
    while test -n "$part3"; do
      local b=${part3:0:1}
      if ! [[ $b =~ $re ]] ; then
        break
      fi
      c+=${b}
      part3=${part3:1}
    done
    f3f=$((f3f + 1000 * $((${c}))))
    local part3Len=${#part3}
    if [ "$part3Len" -ge "1" ] ; then
      f3f=$((f3f + 10 * $((0x${part3:0:1}))))
      if [ "$part3Len" -ge "2" ] ; then
        f3f=$((f3f + ${part3:1:1}))
      fi
    fi
  else
      f3f=$((f3f + 1000 * ${part3}))
  fi
  CFLAGS+=" -DMS_DLL_ID=\\\"${_pybasever}\\\""
  CFLAGS+=" -DFIELD3=${f3f}"
  CFLAGS+=" -DORIGINAL_FILENAME=\\\"libpython${_pybasever}.dll\\\""
  local rc_flags=" -DMS_DLL_ID=\\\\\\\"${_pybasever}\\\\\\\" -DFIELD3=${f3f} -DORIGINAL_FILENAME=\\\\\\\"libpython${_pybasever}.dll\\\\\\\""

  # Workaround for conftest error on 64-bit builds
  export ac_cv_working_tzset=no

  # Workaround for when dlfcn exists on Windows, which causes
  # some conftests to succeed when they shouldn't (we don't use dlfcn).
  export ac_cv_header_dlfcn_h=no
  export ac_cv_lib_dl_dlopen=no
  export ac_cv_have_decl_RTLD_GLOBAL=no
  export ac_cv_have_decl_RTLD_LAZY=no
  export ac_cv_have_decl_RTLD_LOCAL=no
  export ac_cv_have_decl_RTLD_NOW=no
  export ac_cv_have_decl_RTLD_DEEPBIND=no
  export ac_cv_have_decl_RTLD_MEMBER=no
  export ac_cv_have_decl_RTLD_NODELETE=no
  export ac_cv_have_decl_RTLD_NOLOAD=no

  [[ -d "${srcdir}/build-${CARCH}" ]] && rm -rf "${srcdir}/build-${CARCH}"
  mkdir -p "${srcdir}/build-${CARCH}" && cd "${srcdir}/build-${CARCH}"

  MSYSTEM=MINGW ../Python-${pkgver}/configure \
    --prefix=${MINGW_PREFIX} \
    --host=${MINGW_CHOST} \
    --build=${MINGW_CHOST} \
    --enable-shared \
    --with-nt-threads \
    --with-system-expat \
    --with-system-ffi \
    --with-system-libmpdec \
    --without-ensurepip \
    --without-c-locale-coercion \
    --enable-loadable-sqlite-extensions \
    "${_extra_config[@]}" \
    RCFLAGS="$rc_flags" \
    OPT=""

  # We patch importlib which is embedded in C headers, so regenerate them
  make regen-importlib

  make

  # Add missing venvlauncher files (issue #7014)
  # FIXME: build these from PC/launcher.c instead
  cp python.exe venvlauncher.exe
  cp pythonw.exe venvwlauncher.exe
}

package() {
  cd "${srcdir}/build-${CARCH}"

  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  MSYSTEM=MINGW \
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  make -j1 install DESTDIR="${pkgdir}"
  if check_option "debug" "n"; then
    VERABI=${_pybasever}
  else
    VERABI=${_pybasever}d
  fi

  # gdb pretty printers for debugging Python itself; to use:
  # python
  # sys.path.append('C:/msys64/mingw64/share/gdb/python3')
  # import python_gdb
  # reload(python_gdb)
  # end
  if [[ "${_primary_python}" == "yes" ]]; then
    [[ -d "${pkgdir}${MINGW_PREFIX}"/share/gdb/python3/ ]] || mkdir -p "${pkgdir}${MINGW_PREFIX}"/share/gdb/python3/
    cp -f python.exe-gdb.py "${pkgdir}${MINGW_PREFIX}"/share/gdb/python3/python_gdb.py
  fi

  cp -f "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config-${VERABI}/libpython${VERABI}.dll.a "${pkgdir}${MINGW_PREFIX}"/lib/libpython${VERABI}.dll.a

  # Need for building boost python module
  cp -f "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config-${VERABI}/libpython${VERABI}.dll.a "${pkgdir}${MINGW_PREFIX}"/lib/libpython${_pybasever}.dll.a

  # some useful "stuff"
  install -dm755 "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/{i18n,scripts}
  install -m755 "${srcdir}/Python-${pkgver}"/Tools/i18n/{msgfmt,pygettext}.py "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/i18n/
  install -m755 "${srcdir}/Python-${pkgver}"/Tools/scripts/{README,*py} "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/scripts/

  # clean up #!s
  find "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/ -name '*.py' | \
    xargs sed -i "s|#[ ]*![ ]*/usr/bin/env python$|#!/usr/bin/env python|"

  # clean-up reference to build directory
  sed -i "s#${srcdir}/Python-${pkgver}:##" "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config-${VERABI}/Makefile

  for fscripts in 2to3 2to3-${_pybasever} idle3 idle${_pybasever} pydoc3 pydoc${_pybasever}; do
    sed -i "s|$(cygpath -w ${MINGW_PREFIX} | sed 's|\\|\\\\|g')/bin/python${_pybasever}.exe|/usr/bin/env python${_pybasever}.exe|g" "${pkgdir}${MINGW_PREFIX}"/bin/${fscripts}
  done

  if [[ "${_primary_python}" == "yes" ]]; then
    # Default names are aliases for Python now
    cp "${pkgdir}${MINGW_PREFIX}"/bin/python3.exe "${pkgdir}${MINGW_PREFIX}"/bin/python.exe
    cp "${pkgdir}${MINGW_PREFIX}"/bin/python3w.exe "${pkgdir}${MINGW_PREFIX}"/bin/pythonw.exe
    cp "${pkgdir}${MINGW_PREFIX}"/bin/python3-config "${pkgdir}${MINGW_PREFIX}"/bin/python-config
    cp "${pkgdir}${MINGW_PREFIX}"/bin/idle3 "${pkgdir}${MINGW_PREFIX}"/bin/idle
    cp "${pkgdir}${MINGW_PREFIX}"/bin/pydoc3 "${pkgdir}${MINGW_PREFIX}"/bin/pydoc
  else
    rm "${pkgdir}${MINGW_PREFIX}"/bin/python3.exe
    rm "${pkgdir}${MINGW_PREFIX}"/bin/python3w.exe
    rm "${pkgdir}${MINGW_PREFIX}"/bin/python3-config
    rm "${pkgdir}${MINGW_PREFIX}"/bin/idle3
    rm "${pkgdir}${MINGW_PREFIX}"/bin/pydoc3
    rm "${pkgdir}${MINGW_PREFIX}"/bin/2to3
    rm "${pkgdir}${MINGW_PREFIX}"/lib/pkgconfig/python3-embed.pc
    rm "${pkgdir}${MINGW_PREFIX}"/lib/pkgconfig/python3.pc
    rm "${pkgdir}${MINGW_PREFIX}"/share/man/man1/python3.1
  fi

  sed -i "s|#!${pkgdir}${MINGW_PREFIX}/bin/python${VERABI}.exe|#!/usr/bin/env python${_pybasever}.exe|" "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config-${VERABI}/python-config.py

  # fix permissons
  find ${pkgdir}${MINGW_PREFIX} -type f \( -name "*.dll" -o -name "*.exe" \) | xargs chmod 0755

  # Fix up two instances of MSYS2 paths in python-config.sh in-case the final consumer of the results are native executables.
  sed -e "s|${MINGW_PREFIX}|${PREFIX_WIN}|" \
    -i "${pkgdir}${MINGW_PREFIX}"/bin/python${VERABI}-config
  if [[ "${_primary_python}" == "yes" ]]; then
    sed -e "s|${MINGW_PREFIX}|${PREFIX_WIN}|" \
      -i "${pkgdir}${MINGW_PREFIX}"/bin/python3-config \
      -i "${pkgdir}${MINGW_PREFIX}"/bin/python-config
  fi

  # replace paths in sysconfig
  sed -i "s|${pkgdir}${MINGW_PREFIX}|${MINGW_PREFIX}|g" \
    "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/lib-dynload/_sysconfigdata*.py \
    "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/smtpd.py

  # install venv launchers
  mkdir -p "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/venv/scripts/nt
  cp venvlauncher.exe "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/venv/scripts/nt/python.exe
  cp venvwlauncher.exe "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/venv/scripts/nt/pythonw.exe
}

sha256sums=('0c5a140665436ec3dbfbb79e2dfb6d192655f26ef4a29aeffcb6d1820d716d83'
            '7188e017a1efba4a87cb64a38b63ed2d8a469e2e74c3fd35b6538d5bc6e370e5'
            '66adf9f19a9606f547e4f8321c7764bdf6b91fdbbe53f51723d3adc058bb7563'
            'ef3deb1b637c43479407fe71250a3c7974147b99eea730873690807392f15e8d'
            'd564854a00a95b07526785c463d33bab2adb1e283e7c0754469ed0df41912629'
            '81f67ec38d89f5dcf99e25965c0d3d66407e111258f327547e3d37893f106c6a'
            'd847a3fadaef56ee7ba0850ade77710af8167a7f670c97f1a56f5c837656fd0e'
            'ea5aaaf05b9b08c21e25f8b8f0da9206614f58ce1eed1cebe7e91788d01e3e28'
            'c895125e645db6e1031588bbf18f9ec874fa69385543ef13c0468a17dfdce269'
            'af68cbaef348ad9081ae5b4ee81ebaaaae48c3f1f91e5a80613e02e8f979137e'
            '84aeb6e5c04ca2f7b4f5e6938982c04857f2640569d35c5aa8e1c180c48bcb54'
            'bb82242e6c13ebd2bee6cbcd6f544c55f460d0ba97e97851c05f68a440afa46f'
            '699947a594e47074d8589d60f8950743a12fe95f563e2d509b09fe09fbfa6c7f'
            '257504364591601beac8d0e18c1e03c60125ad16a81e5b31da02689818c0a52e'
            '927d4afe0e4c6d59d552b10f0fc482c101d18f091a807e0b1281695b990754d8'
            'a611744f9b2dbb8ce79503d470e3a5bf6ad3d36231cf6261b4f9088141ddd156'
            '65ad3aa8c6441cc4f497a39b641f70f09d59e1f0b13c8efdcd1970ffcbaf054b'
            'b0a9118076b33d4413e34c58279b9b90d33f4efddff4f84069922f6a7efec4f8'
            '1e61e37e1f7a2ab3e80db34d98adce409b7cdfb87340d13fd021aa97d0a0ea10'
            '2154a458bdc8349e92ffe3416e100f787b3aeb25449b403ac020754c715bbe96'
            '1792869cfcc6d60e5a23b13fd46f52459e02de82c641cb5c81ebcfa11616a28e'
            '31495362de653e99359306c3283686339d2d16f03a68b43631cc16832c582297'
            '393a751e0a955049fa6fcbd45151c5e97bee0a1c0e465d6c33eea2fb1310b4af'
            '26fe798cf62804d02492094875308115d9f3768d570442b8a4ef03ee27941707'
            'b5a00d9da7c44a1b28d0ae9cd0933d0f52653798a1a837aa725524342017205c'
            'd8c1a86a04ad2d1797d9d25b59261107d7a21090b53ee37c3bdc72d132c7d5d1'
            '87f66e5426d9fe20a6ace9b2ef0e432b0dc5a6869e50192a07dc2e9c16433a86'
            'c9d2dc586608c18edb9f595d51310e594abeb87b3434ace8f4007c11b24f813f'
            '84497e6d50bd8675d97274ee907eb356dbaae679e7ec77e76f64a74abf195615'
            'e9a7620ef55f25a977d81f1b38c85ab9240c1c5c8bd5230473fb91c736ac4661'
            '7f857123db502e9b23c1945b91b8f35c63f6d2d8c42e2a722ddf78716d0330be'
            'ccc785c921310f5002e439060c879cb793a62496d7728afcb24fb18b505e09ab'
            '3ed699efd2406dd669a700b9fb8586caa44fa6c206c7f9ceb3aba095bb1feade'
            'f56e7b3294c018985aaff327ad0bb01978a3a5d69f626815ff4b7232bd556e52'
            'b6e68bd82748296e8dc8fee29cd30ec2b4c552807717b148f58112b8f42ff10f'
            '811299bca7af708ff0fd8b1fdb424b2dd456133e2ccb441e1c1b64778435d05d'
            '0134d1099488e26259db43136cfd5a57c87c167537dce271220e5c1abea080a5'
            '8fda3a8c098412f8af4e09f4c925ad6479f709014215eee7b314f25048f7cb5e'
            'b2676f4762aca6860f6de6b693bf1052d4e4b39f49fd8de9edd078f3c9021d38'
            '2bc7dcb3204c78f2df1a2d383f2ec6688b6671b4a03772bee8f6a564ac17570d'
            'fe0bc26e8633239cea2cd9eda342aadbc4bd5722bc43258c05c8a37a0df8fc27'
            '54e74c08dfaaa74d9b5e7a1cd3a126f0492214f51a7a91b63f62c8a1ce0b6d2e'
            'adf488d166961d636fa66d9b93e3ec7c12b688c30414105c8b9b2327735b138f'
            '8cdcfa195e10799f70c38e8607b94259f792225cd3ced7e31f13d6c159928584'
            'd98c085b9d4cb3dc5a8d041274282b7f62197384a3302cf81d2fa00ee6ea0950'
            '0bae3eba3556e4ff7b43409413709b0f4ebd1d01b5b77090cfdee1a623af6493'
            'f3b54b5b550f3af812f4ed5761ee06546ca2a7ae8de78eae28c428d481f608a6'
            'b4183edd909ee9ab21ff7d86d8076287cb7ead28b6223a8c4d5c2b472c093529'
            'cc0e6810d35f0790173278d4e4edf28446f3f9fcdb08f67f9158f0be5c62b40d'
            '6962e2487cfd17ea56a99609b3326137a0ca9cb9d2ffe4149953da96a0f92790'
            'a78627e5429685035a910bded9927ac666293a9f5be3ac3546e8147dcfd6ed33'
            '52920c7115562ac76bba8accfd46e8c1407c2e56ebdbed14709a5be138febaef'
            '589af966aec648adab9e847c03d48047454d232987e64de93dd91d637306af77'
            'e5554b33128f2e859df0494da1903667e9d19021c2a5fd8b7cf072e965d97bee'
            'ddb7aa2e617fe3b9a38ee420687359fb841095eb7bcf9bfc8cde5cd1432bb72f'
            'f11779027b111d123cc913885cec1fc2ef52c9abc3f875cdca7387ab25720f1b'
            '59af1095b5655efec7cf50c010b50515561642475b74bc3bc1b2a755b426644e'
            'f7461c5d9d569814eec3cbac5dc5a336fb20d1b71bd3860c5cc27b28a7192c25'
            '4a8e57ffa76d62d9140406a2b3387773179f3eb3a20a58db6e8aef931255322c'
            '31465a5bc37f162366792b53f9c68723661270a6d65ac132fc5c1e579e2d6878'
            'e6501ae503547f1b3337c6f3099b8eeda25af430ac907fde86fd0b2131afe3b3'
            'be920ebc6947cc7e21f60c91dce5b3a4a59a014bf118bdbd9b0dcae9811802be'
            '0025307cd07430344e8cfa1dddbfd799fccaa833cfda263a749d3bed500038fc'
            'a270da6640c472efae0c86bb7fd3262625aca2a55517ca0fe2a951533bebd5a0'
            'bf2e597f564ddc592fcd8a281df7022c26904a703da030f421705ef484a78a7d'
            'e38343393bd9bf7a72a54dc14b4065b17f30d03571400e2d0ca86bdd883040f0'
            'b816cfd2af5606fe8f4dd5a6068cee18bf5e59ae915c4cdad0bf215652ca03e0'
            '213eacb5e6665f6055c66e3bcc3ce3035b37e3d654336c1c0f25b333aa332f8f'
            'b76a466c65907b469f30e731f18210de04553a250eb7dafb0a69fbf7cf562642'
            '5b1c881e4698631510214b79b96a1c086bd4dc2990cc21b91bf010c36fd49028'
            '604b170401995d4e22d673e49b34b12b55733babcbd5f88ba7b3cc94c55b9a8d'
            '619195b5db09ca724bb1bccfbb0d9dc93af71c90324a726a7a652e74a58c7e6c'
            'cfe95c0dc6f72b60bfc4b20d2033df29876934145dfb3c5654ace9cf50e6e6c9'
            '0ec0ac8bcbda3f14e369352c9953e2896184c562791d053bf378b6ddafc3edd9'
            'f9376a82889bc514b517da4c9f175f729e416b6fb5bc320f9902d382219593b6'
            '146955d4ad5b0c83721920b6ba88579e04b03b16924231e3aa6cee7dd4ea3b07'
            '0ded4269a5693b4892fad3d97317557f5ca8e9365f5bb6437eb0265bbfc5c148'
            '149e2311c226d565394f50560266dc398d9db1b241a3c9dab18115f44fd5d97c'
            '63cc9f97610c1b45005d9808fd9be72a50a2f637ede2a9c0241fa3749ae29d10'
            'e6a248f85220110ffa7ddf98aa3912ffa02226f331da3445f3232e53b1c9364e'
            '84981d45ae129d593e76e07f6723a0ccd1faaa6412ae238dc8d72636b98b5f19'
            'f4f9383f4da59bd4f51d5e9ae515bb1a4f5b2b94e07715de48362eb0d8b2dbe1'
            '204531d10461451457f5dfaf65af308a8e2748f3d1904086186d6cde45826132'
            '6c2ee73dac4f3c98bc7e9fc147042d30f9ab2fd9337d38ac2fc79b8960215f4a'
            '6101368f3c103928685c1036553f438c85d1d213155d14d4668c89df871ff2a6'
            '103338e750ec523a594d4a3ce2be9714735699684d650683ed124b6d7309a98e'
            '6b36bb875748287a61707bcb86dec67c5644ce807155ac0c3e151b33c28404fc'
            '032193dafd72a88bb24da9fda03baf78be8450ad756febc178566a54237a8596'
            '6b98b84a9fd9c71b4a9fee6601af41d27206155a3fbd7466b42ce52da2f5b63f'
            '9ab5206f2a5eac22711de0960493447e7154f000cab9cc9722e24c5661ff0009'
            'a7049c69c4b0774e64e785b08d48b95ad5efb57a52bae4c2749e832dc4e9e004'
            '2267c8e135fae0b3730b5779088fccbda324507a3413ffa8ac0e64f9ea4e5bc2'
            '347830b787c1421be60060afcdbb1a266692013749e9626e8e7b25b8c06094eb'
            'ae1436987fca13801dc65ac1f0a03a8a4cbb684f625ec6f0ccb56e7cfb482a21'
            '07baf5fe0a1fbf65f123de722635b51d8e9306287fa99ca6aea16853fa184663'
            '378ae3dcdce2fdb8f598548c83b0ca39d02dac8f3c7128c455c770cf718bc6bc'
            '0d131c6dc8689786a8c1c824e844e836e509fb9b0e4c8057fcb2fcb225e417bc')
